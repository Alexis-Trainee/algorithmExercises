Given a square matrix, calculate the absolute difference between the sums of its diagonals.
Dada uma matriz quadrada, calcule a diferença absoluta entre as somas de suas diagonais.

Entrada:
Receber a matriz arr de três linhas e três colunas 
Inicialização:
iniciar uma variável do tipo inteira denominada firstdiagonal com zero;
inicializar uma variável de tipo inteira denominada secondDiagonal com zero;
iniciar uma variável chamada result do tipo inteira com zero;

Processamento:
Percorrer a matriz;
incrementar a variável firstDiagonal os elementos correspondentes a ela;
incrementar a variável secondDiagonal os elementos correspondentes a ela;
atribuir a variável result a subtração de firstDiagonal pela variável secondDiagonal;

Saída:
se o valor resultante da subtração de firstDiagonal por secondDiagonal for um número negativo fazer a muitiplicação por -1;
retornar a variável result;
se não retornar a variável result;
se não return zero
 */

function diagonalDifference(arr) {
    // Write your code here
let firstDiagonal = 0;
let secondDiagonal = 0;
result = 0;

    for (i=0; i<arr.lenght; i++) {
        firstDiagonal =firstDiagonal + arr[i][i];

            for (j= arr.length-1; j>-1; j--) {
                secondDiagonal = secondDiagonal + arr[i][j]
            }

    }
        result = firstDiagonal - secondDiagonal;
            if (result >0){
                return result;
                    }else if (result < 0) {
                    return (result*(-1));
                        }else {
                        return 0;
                        }        
           
}
RESOLUÇÃO:
let firstDiagonal = 0;
let secondDiagonal = 0;
let result=0;
//aqui idigo que j é igual a length-1 ou seja a iteração será feita do final para frente
    for(let i=0, j=arr.length-1; i<arr.length, j>-1; i++,j--) {
        firstDiagonal = firstDiagonal + arr[i][i];// [i][i] = na primeira iteração 0,0, na segunda 1,1 e assim por diante;
        secondDiagonal = secondDiagonal + arr[i][j];//[i][j] = na primeira iteração i=0 j=2 pois a matriz é 3 por 3, na segunda iteração i=1 e j=1 e isso vai até que j seja igual a -1 que siguinifica que a matriz terminou ja que o ultimo índice é 0
    }
result = firstDiagonal-secondDiagonal;
if (result < 0){
    return (result * (-1));
}else if (result > 0) {
    return result;
}else return 0;
}


----------------------------------------------------solução da internet------------------------------------------------------------
const dim = arr[0].length;
let firstDiagonal = 0;
let secondDiagonal = 0;
let result = 0;

    for(let i=0, j=(dim-1); i<dim,j> -1; i++, j--){
        firstDiagonal = firstDiagonal + arr[i][i];
        secondDiagonal = secondDiagonal + arr[i][j];
}
result = firstDiagonal - secondDiagonal;
if (result>0){
    return result;
}else if (result <0) {
    return (result *(-1));
}
else return 0;
}
